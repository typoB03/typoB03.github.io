{"ast":null,"code":"import React,{useEffect}from\"react\";import*as THREE from\"three\";import{OrbitControls}from\"three/examples/jsm/controls/OrbitControls\";import{GLTFLoader}from\"three/addons/loaders/GLTFLoader.js\";import{createNoise3D}from\"simplex-noise\";import'./styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ThreeBackground=function ThreeBackground(_ref){var musicSrc=_ref.musicSrc,visualColor=_ref.visualColor,coverImg=_ref.coverImg,isWireframe=_ref.isWireframe,setLoadMusic=_ref.setLoadMusic;var noise=createNoise3D();var audioSource;var analyser;var dataArray;var musicCube;useEffect(function(){//getting audio context\nif(!audioSource){var audio=document.getElementById(\"music-audio\");audio.src=musicSrc;audio.load();audio.play();var context=new AudioContext();audioSource=context.createMediaElementSource(audio);analyser=context.createAnalyser();audioSource.connect(analyser);analyser.connect(context.destination);analyser.fftSize=512;audioSource.connect(context.destination);var bufferLength=analyser.frequencyBinCount;dataArray=new Uint8Array(bufferLength);}var scene=new THREE.Scene();var camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1000);camera.position.z=96;var canvas=document.getElementById(\"three-bg-canvas\");var renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:true});renderer.setSize(window.innerWidth,window.innerHeight);var container=document.getElementById(\"three-bg-container\");container.appendChild(renderer.domElement);//for loading GLB\n// var loader = new GLTFLoader();\n// loader.load(\"/glb/sui.glb\", function (gltf) {\n//     const albumModal = gltf.scene;\n//     albumModal.scale.set(0.1, 0.1, 0.1);\n//     albumModal.position.set(-20, -24, -18);\n//     scene.add(albumModal);\n// });\nvar loader=new THREE.TextureLoader();var texture=loader.load(coverImg);var albumGeometry=new THREE.BoxGeometry(20,20,1);// ensure correct aspect ratio\nvar albumMaterial=[new THREE.MeshBasicMaterial({color:\"gray\"//left\n}),new THREE.MeshBasicMaterial({color:\"gray\"//right\n}),new THREE.MeshBasicMaterial({color:\"gray\"// top\n}),new THREE.MeshBasicMaterial({color:\"gray\"// bottom\n}),new THREE.MeshBasicMaterial({map:texture// front\n}),new THREE.MeshBasicMaterial({color:\"gray\"//back\n})];var albumPlane=new THREE.Mesh(albumGeometry,albumMaterial);scene.add(albumPlane);var musicGeometry=new THREE.TorusKnotGeometry(20,1.98,200,13,2,3);var musicMaterial=new THREE.MeshLambertMaterial({color:visualColor,wireframe:isWireframe});musicCube=new THREE.Mesh(musicGeometry,musicMaterial);musicCube.position.set(0,0,0);scene.add(musicCube);var ambientLight=new THREE.AmbientLight(0xffffff,0.8);ambientLight.castShadow=true;scene.add(ambientLight);var spotLight=new THREE.SpotLight(0xffffff,1);spotLight.castShadow=true;scene.add(spotLight);var controller=new OrbitControls(camera,renderer.domElement);var animate=function animate(){if(musicCube){analyser.getByteFrequencyData(dataArray);var lowerHalfArray=dataArray.slice(0,dataArray.length/2-1);var upperHalfArray=dataArray.slice(dataArray.length/2-1,dataArray.length-1);var lowerMax=max(lowerHalfArray);var upperAvg=avg(upperHalfArray);var lowerMaxFr=lowerMax/lowerHalfArray.length;var upperAvgFr=upperAvg/upperHalfArray.length;var modA=modulate(Math.pow(lowerMaxFr,0.8),0,1,0,5);var modB=modulate(upperAvgFr,0,1,0,4);makeRoughBall(musicCube,modA,modB);}controller.update();renderer.render(scene,camera);window.requestAnimationFrame(animate);};animate();},[]);var makeRoughBall=function makeRoughBall(mesh,bassFr,treFr){var position=mesh.geometry.attributes.position;var vertex=new THREE.Vector3();for(var i=0,l=position.count;i<l;i++){vertex.fromBufferAttribute(position,i);vertex.applyMatrix4(mesh.matrixWorld);var offset=mesh.geometry.parameters.radius;var amp=2;var time=window.performance.now();vertex.normalize();var rf=0.00001;var distance=offset+bassFr+noise(vertex.x+time*rf*7,vertex.y+time*rf*8,vertex.z+time*rf*9)*amp*treFr;vertex.multiplyScalar(distance);position.setXYZ(i,vertex.x,vertex.y,vertex.z);position.needsUpdate=true;}mesh.rotation.x=treFr*0.005;mesh.rotation.y=treFr*0.005;mesh.geometry.verticesNeedUpdate=true;mesh.geometry.normalsNeedUpdate=true;mesh.updateMatrixWorld();};var fractionate=function fractionate(val,minVal,maxVal){return(val-minVal)/(maxVal-minVal);};var modulate=function modulate(val,minVal,maxVal,outMin,outMax){var fr=fractionate(val,minVal,maxVal);var delta=outMax-outMin;return outMin+fr*delta;};var avg=function avg(arr){var total=arr.reduce(function(sum,b){return sum+b;});return total/arr.length;};var max=function max(arr){return arr.reduce(function(a,b){return Math.max(a,b);});};return/*#__PURE__*/_jsxs(\"div\",{id:\"three-bg-container\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"back-button\",onClick:function onClick(){return setLoadMusic(null);},children:\"BACK\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"three-bg-canvas\"}),/*#__PURE__*/_jsx(\"audio\",{id:\"music-audio\",controls:true,style:{position:\"absolute\",bottom:\"5px\",left:\"50%\",transform:\"translateX(-50%)\"}})]});};export default ThreeBackground;","map":{"version":3,"names":["React","useEffect","THREE","OrbitControls","GLTFLoader","createNoise3D","ThreeBackground","musicSrc","visualColor","coverImg","isWireframe","setLoadMusic","noise","audioSource","analyser","dataArray","musicCube","audio","document","getElementById","src","load","play","context","AudioContext","createMediaElementSource","createAnalyser","connect","destination","fftSize","bufferLength","frequencyBinCount","Uint8Array","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","canvas","renderer","WebGLRenderer","antialias","setSize","container","appendChild","domElement","loader","TextureLoader","texture","albumGeometry","BoxGeometry","albumMaterial","MeshBasicMaterial","color","map","albumPlane","Mesh","add","musicGeometry","TorusKnotGeometry","musicMaterial","MeshLambertMaterial","wireframe","set","ambientLight","AmbientLight","castShadow","spotLight","SpotLight","controller","animate","getByteFrequencyData","lowerHalfArray","slice","length","upperHalfArray","lowerMax","max","upperAvg","avg","lowerMaxFr","upperAvgFr","modA","modulate","Math","pow","modB","makeRoughBall","update","render","requestAnimationFrame","mesh","bassFr","treFr","geometry","attributes","vertex","Vector3","i","l","count","fromBufferAttribute","applyMatrix4","matrixWorld","offset","parameters","radius","amp","time","performance","now","normalize","rf","distance","x","y","multiplyScalar","setXYZ","needsUpdate","rotation","verticesNeedUpdate","normalsNeedUpdate","updateMatrixWorld","fractionate","val","minVal","maxVal","outMin","outMax","fr","delta","arr","total","reduce","sum","b","a","bottom","left","transform"],"sources":["/Users/playtime/Desktop/Project/ye-sheng/src/ThreeBackground/index.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/addons/loaders/GLTFLoader.js\";\nimport { createNoise3D } from \"simplex-noise\";\nimport './styles.css';\n\nconst ThreeBackground = ({ musicSrc, visualColor, coverImg, isWireframe, setLoadMusic }) => {\n    const noise = createNoise3D();\n\n    let audioSource;\n    let analyser;\n    let dataArray;\n    let musicCube;\n\n    useEffect(() => {\n        //getting audio context\n        if (!audioSource) {\n            const audio = document.getElementById(\"music-audio\");\n            audio.src = musicSrc;\n            audio.load();\n            audio.play();\n            const context = new AudioContext();\n            audioSource = context.createMediaElementSource(audio);\n            analyser = context.createAnalyser();\n            audioSource.connect(analyser);\n            analyser.connect(context.destination);\n            analyser.fftSize = 512;\n            audioSource.connect(context.destination);\n            const bufferLength = analyser.frequencyBinCount;\n            dataArray = new Uint8Array(bufferLength);\n        }\n\n        const scene = new THREE.Scene();\n        const camera = new THREE.PerspectiveCamera(\n            50,\n            window.innerWidth / window.innerHeight,\n            1,\n            1000\n        );\n        camera.position.z = 96;\n\n        const canvas = document.getElementById(\"three-bg-canvas\");\n\n        const renderer = new THREE.WebGLRenderer({\n            canvas,\n            antialias: true,\n        });\n\n        renderer.setSize(window.innerWidth, window.innerHeight);\n\n        const container = document.getElementById(\"three-bg-container\");\n\n        container.appendChild(renderer.domElement);\n\n        //for loading GLB\n        // var loader = new GLTFLoader();\n\n        // loader.load(\"/glb/sui.glb\", function (gltf) {\n        //     const albumModal = gltf.scene;\n        //     albumModal.scale.set(0.1, 0.1, 0.1);\n        //     albumModal.position.set(-20, -24, -18);\n        //     scene.add(albumModal);\n        // });\n\n        const loader = new THREE.TextureLoader();\n        const texture = loader.load(coverImg);\n\n        const albumGeometry = new THREE.BoxGeometry(20, 20, 1); // ensure correct aspect ratio\n        const albumMaterial = [\n            new THREE.MeshBasicMaterial({\n                color: \"gray\", //left\n            }),\n            new THREE.MeshBasicMaterial({\n                color: \"gray\", //right\n            }),\n            new THREE.MeshBasicMaterial({\n                color: \"gray\", // top\n            }),\n            new THREE.MeshBasicMaterial({\n                color: \"gray\", // bottom\n            }),\n            new THREE.MeshBasicMaterial({\n                map: texture, // front\n            }),\n            new THREE.MeshBasicMaterial({\n                color: \"gray\", //back\n            }),\n        ];\n\n        const albumPlane = new THREE.Mesh(albumGeometry, albumMaterial);\n        scene.add(albumPlane);\n\n        const musicGeometry = new THREE.TorusKnotGeometry(\n            20,\n            1.98,\n            200,\n            13,\n            2,\n            3\n        );\n\n        const musicMaterial = new THREE.MeshLambertMaterial({\n            color: visualColor,\n            wireframe: isWireframe,\n        });\n\n        musicCube = new THREE.Mesh(musicGeometry, musicMaterial);\n        musicCube.position.set(0, 0, 0);\n        scene.add(musicCube);\n\n        const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n        ambientLight.castShadow = true;\n        scene.add(ambientLight);\n\n        const spotLight = new THREE.SpotLight(0xffffff, 1);\n        spotLight.castShadow = true;\n        scene.add(spotLight);\n\n        const controller = new OrbitControls(camera, renderer.domElement);\n\n        const animate = () => {\n            if (musicCube) {\n                analyser.getByteFrequencyData(dataArray);\n\n                var lowerHalfArray = dataArray.slice(\n                    0,\n                    dataArray.length / 2 - 1\n                );\n                var upperHalfArray = dataArray.slice(\n                    dataArray.length / 2 - 1,\n                    dataArray.length - 1\n                );\n\n                var lowerMax = max(lowerHalfArray);\n                var upperAvg = avg(upperHalfArray);\n\n                var lowerMaxFr = lowerMax / lowerHalfArray.length;\n                var upperAvgFr = upperAvg / upperHalfArray.length;\n\n                const modA = modulate(Math.pow(lowerMaxFr, 0.8), 0, 1, 0, 5);\n                const modB = modulate(upperAvgFr, 0, 1, 0, 4);\n\n                makeRoughBall(musicCube, modA, modB);\n            }\n\n            controller.update();\n            renderer.render(scene, camera);\n            window.requestAnimationFrame(animate);\n        };\n        animate();\n    }, []);\n\n    const makeRoughBall = (mesh, bassFr, treFr) => {\n        let position = mesh.geometry.attributes.position;\n        const vertex = new THREE.Vector3();\n\n        for (let i = 0, l = position.count; i < l; i++) {\n            vertex.fromBufferAttribute(position, i);\n            vertex.applyMatrix4(mesh.matrixWorld);\n            var offset = mesh.geometry.parameters.radius;\n            var amp = 2;\n            var time = window.performance.now();\n            vertex.normalize();\n            var rf = 0.00001;\n            var distance =\n                offset +\n                bassFr +\n                noise(\n                    vertex.x + time * rf * 7,\n                    vertex.y + time * rf * 8,\n                    vertex.z + time * rf * 9\n                ) *\n                    amp *\n                    treFr;\n            vertex.multiplyScalar(distance);\n            position.setXYZ(i, vertex.x, vertex.y, vertex.z);\n            position.needsUpdate = true;\n        }\n\n        mesh.rotation.x = treFr * 0.005;\n        mesh.rotation.y = treFr * 0.005;\n\n        mesh.geometry.verticesNeedUpdate = true;\n        mesh.geometry.normalsNeedUpdate = true;\n        mesh.updateMatrixWorld();\n    };\n\n    const fractionate = (val, minVal, maxVal) => {\n        return (val - minVal) / (maxVal - minVal);\n    };\n\n    const modulate = (val, minVal, maxVal, outMin, outMax) => {\n        var fr = fractionate(val, minVal, maxVal);\n        var delta = outMax - outMin;\n        return outMin + fr * delta;\n    };\n\n    const avg = (arr) => {\n        var total = arr.reduce(function (sum, b) {\n            return sum + b;\n        });\n        return total / arr.length;\n    };\n\n    const max = (arr) => {\n        return arr.reduce(function (a, b) {\n            return Math.max(a, b);\n        });\n    };\n\n    return (\n        <div id=\"three-bg-container\">\n            <a className=\"back-button\" onClick={()=>setLoadMusic(null)}>\n                BACK\n            </a>\n            <canvas id=\"three-bg-canvas\" />\n            <audio\n                id=\"music-audio\"\n                controls\n                style={{\n                    position: \"absolute\",\n                    bottom: \"5px\",\n                    left: \"50%\",\n                    transform: \"translateX(-50%)\",\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ThreeBackground;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,GAAKC,MAAK,KAAM,OAAO,CAC9B,OAASC,aAAa,KAAQ,2CAA2C,CACzE,OAASC,UAAU,KAAQ,oCAAoC,CAC/D,OAASC,aAAa,KAAQ,eAAe,CAC7C,MAAO,cAAc,CAAC,wFAEtB,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,MAAuE,IAAjEC,SAAQ,MAARA,QAAQ,CAAEC,WAAW,MAAXA,WAAW,CAAEC,QAAQ,MAARA,QAAQ,CAAEC,WAAW,MAAXA,WAAW,CAAEC,YAAY,MAAZA,YAAY,CACjF,GAAMC,MAAK,CAAGP,aAAa,EAAE,CAE7B,GAAIQ,YAAW,CACf,GAAIC,SAAQ,CACZ,GAAIC,UAAS,CACb,GAAIC,UAAS,CAEbf,SAAS,CAAC,UAAM,CACZ;AACA,GAAI,CAACY,WAAW,CAAE,CACd,GAAMI,MAAK,CAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CACpDF,KAAK,CAACG,GAAG,CAAGb,QAAQ,CACpBU,KAAK,CAACI,IAAI,EAAE,CACZJ,KAAK,CAACK,IAAI,EAAE,CACZ,GAAMC,QAAO,CAAG,GAAIC,aAAY,EAAE,CAClCX,WAAW,CAAGU,OAAO,CAACE,wBAAwB,CAACR,KAAK,CAAC,CACrDH,QAAQ,CAAGS,OAAO,CAACG,cAAc,EAAE,CACnCb,WAAW,CAACc,OAAO,CAACb,QAAQ,CAAC,CAC7BA,QAAQ,CAACa,OAAO,CAACJ,OAAO,CAACK,WAAW,CAAC,CACrCd,QAAQ,CAACe,OAAO,CAAG,GAAG,CACtBhB,WAAW,CAACc,OAAO,CAACJ,OAAO,CAACK,WAAW,CAAC,CACxC,GAAME,aAAY,CAAGhB,QAAQ,CAACiB,iBAAiB,CAC/ChB,SAAS,CAAG,GAAIiB,WAAU,CAACF,YAAY,CAAC,CAC5C,CAEA,GAAMG,MAAK,CAAG,GAAI/B,MAAK,CAACgC,KAAK,EAAE,CAC/B,GAAMC,OAAM,CAAG,GAAIjC,MAAK,CAACkC,iBAAiB,CACtC,EAAE,CACFC,MAAM,CAACC,UAAU,CAAGD,MAAM,CAACE,WAAW,CACtC,CAAC,CACD,IAAI,CACP,CACDJ,MAAM,CAACK,QAAQ,CAACC,CAAC,CAAG,EAAE,CAEtB,GAAMC,OAAM,CAAGxB,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAEzD,GAAMwB,SAAQ,CAAG,GAAIzC,MAAK,CAAC0C,aAAa,CAAC,CACrCF,MAAM,CAANA,MAAM,CACNG,SAAS,CAAE,IACf,CAAC,CAAC,CAEFF,QAAQ,CAACG,OAAO,CAACT,MAAM,CAACC,UAAU,CAAED,MAAM,CAACE,WAAW,CAAC,CAEvD,GAAMQ,UAAS,CAAG7B,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC,CAE/D4B,SAAS,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC,CAE1C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,OAAM,CAAG,GAAIhD,MAAK,CAACiD,aAAa,EAAE,CACxC,GAAMC,QAAO,CAAGF,MAAM,CAAC7B,IAAI,CAACZ,QAAQ,CAAC,CAErC,GAAM4C,cAAa,CAAG,GAAInD,MAAK,CAACoD,WAAW,CAAC,EAAE,CAAE,EAAE,CAAE,CAAC,CAAC,CAAE;AACxD,GAAMC,cAAa,CAAG,CAClB,GAAIrD,MAAK,CAACsD,iBAAiB,CAAC,CACxBC,KAAK,CAAE,MAAQ;AACnB,CAAC,CAAC,CACF,GAAIvD,MAAK,CAACsD,iBAAiB,CAAC,CACxBC,KAAK,CAAE,MAAQ;AACnB,CAAC,CAAC,CACF,GAAIvD,MAAK,CAACsD,iBAAiB,CAAC,CACxBC,KAAK,CAAE,MAAQ;AACnB,CAAC,CAAC,CACF,GAAIvD,MAAK,CAACsD,iBAAiB,CAAC,CACxBC,KAAK,CAAE,MAAQ;AACnB,CAAC,CAAC,CACF,GAAIvD,MAAK,CAACsD,iBAAiB,CAAC,CACxBE,GAAG,CAAEN,OAAS;AAClB,CAAC,CAAC,CACF,GAAIlD,MAAK,CAACsD,iBAAiB,CAAC,CACxBC,KAAK,CAAE,MAAQ;AACnB,CAAC,CAAC,CACL,CAED,GAAME,WAAU,CAAG,GAAIzD,MAAK,CAAC0D,IAAI,CAACP,aAAa,CAAEE,aAAa,CAAC,CAC/DtB,KAAK,CAAC4B,GAAG,CAACF,UAAU,CAAC,CAErB,GAAMG,cAAa,CAAG,GAAI5D,MAAK,CAAC6D,iBAAiB,CAC7C,EAAE,CACF,IAAI,CACJ,GAAG,CACH,EAAE,CACF,CAAC,CACD,CAAC,CACJ,CAED,GAAMC,cAAa,CAAG,GAAI9D,MAAK,CAAC+D,mBAAmB,CAAC,CAChDR,KAAK,CAAEjD,WAAW,CAClB0D,SAAS,CAAExD,WACf,CAAC,CAAC,CAEFM,SAAS,CAAG,GAAId,MAAK,CAAC0D,IAAI,CAACE,aAAa,CAAEE,aAAa,CAAC,CACxDhD,SAAS,CAACwB,QAAQ,CAAC2B,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC/BlC,KAAK,CAAC4B,GAAG,CAAC7C,SAAS,CAAC,CAEpB,GAAMoD,aAAY,CAAG,GAAIlE,MAAK,CAACmE,YAAY,CAAC,QAAQ,CAAE,GAAG,CAAC,CAC1DD,YAAY,CAACE,UAAU,CAAG,IAAI,CAC9BrC,KAAK,CAAC4B,GAAG,CAACO,YAAY,CAAC,CAEvB,GAAMG,UAAS,CAAG,GAAIrE,MAAK,CAACsE,SAAS,CAAC,QAAQ,CAAE,CAAC,CAAC,CAClDD,SAAS,CAACD,UAAU,CAAG,IAAI,CAC3BrC,KAAK,CAAC4B,GAAG,CAACU,SAAS,CAAC,CAEpB,GAAME,WAAU,CAAG,GAAItE,cAAa,CAACgC,MAAM,CAAEQ,QAAQ,CAACM,UAAU,CAAC,CAEjE,GAAMyB,QAAO,CAAG,QAAVA,QAAO,EAAS,CAClB,GAAI1D,SAAS,CAAE,CACXF,QAAQ,CAAC6D,oBAAoB,CAAC5D,SAAS,CAAC,CAExC,GAAI6D,eAAc,CAAG7D,SAAS,CAAC8D,KAAK,CAChC,CAAC,CACD9D,SAAS,CAAC+D,MAAM,CAAG,CAAC,CAAG,CAAC,CAC3B,CACD,GAAIC,eAAc,CAAGhE,SAAS,CAAC8D,KAAK,CAChC9D,SAAS,CAAC+D,MAAM,CAAG,CAAC,CAAG,CAAC,CACxB/D,SAAS,CAAC+D,MAAM,CAAG,CAAC,CACvB,CAED,GAAIE,SAAQ,CAAGC,GAAG,CAACL,cAAc,CAAC,CAClC,GAAIM,SAAQ,CAAGC,GAAG,CAACJ,cAAc,CAAC,CAElC,GAAIK,WAAU,CAAGJ,QAAQ,CAAGJ,cAAc,CAACE,MAAM,CACjD,GAAIO,WAAU,CAAGH,QAAQ,CAAGH,cAAc,CAACD,MAAM,CAEjD,GAAMQ,KAAI,CAAGC,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACL,UAAU,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAC5D,GAAMM,KAAI,CAAGH,QAAQ,CAACF,UAAU,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAE7CM,aAAa,CAAC3E,SAAS,CAAEsE,IAAI,CAAEI,IAAI,CAAC,CACxC,CAEAjB,UAAU,CAACmB,MAAM,EAAE,CACnBjD,QAAQ,CAACkD,MAAM,CAAC5D,KAAK,CAAEE,MAAM,CAAC,CAC9BE,MAAM,CAACyD,qBAAqB,CAACpB,OAAO,CAAC,CACzC,CAAC,CACDA,OAAO,EAAE,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMiB,cAAa,CAAG,QAAhBA,cAAa,CAAII,IAAI,CAAEC,MAAM,CAAEC,KAAK,CAAK,CAC3C,GAAIzD,SAAQ,CAAGuD,IAAI,CAACG,QAAQ,CAACC,UAAU,CAAC3D,QAAQ,CAChD,GAAM4D,OAAM,CAAG,GAAIlG,MAAK,CAACmG,OAAO,EAAE,CAElC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEC,CAAC,CAAG/D,QAAQ,CAACgE,KAAK,CAAEF,CAAC,CAAGC,CAAC,CAAED,CAAC,EAAE,CAAE,CAC5CF,MAAM,CAACK,mBAAmB,CAACjE,QAAQ,CAAE8D,CAAC,CAAC,CACvCF,MAAM,CAACM,YAAY,CAACX,IAAI,CAACY,WAAW,CAAC,CACrC,GAAIC,OAAM,CAAGb,IAAI,CAACG,QAAQ,CAACW,UAAU,CAACC,MAAM,CAC5C,GAAIC,IAAG,CAAG,CAAC,CACX,GAAIC,KAAI,CAAG3E,MAAM,CAAC4E,WAAW,CAACC,GAAG,EAAE,CACnCd,MAAM,CAACe,SAAS,EAAE,CAClB,GAAIC,GAAE,CAAG,OAAO,CAChB,GAAIC,SAAQ,CACRT,MAAM,CACNZ,MAAM,CACNpF,KAAK,CACDwF,MAAM,CAACkB,CAAC,CAAGN,IAAI,CAAGI,EAAE,CAAG,CAAC,CACxBhB,MAAM,CAACmB,CAAC,CAAGP,IAAI,CAAGI,EAAE,CAAG,CAAC,CACxBhB,MAAM,CAAC3D,CAAC,CAAGuE,IAAI,CAAGI,EAAE,CAAG,CAAC,CAC3B,CACGL,GAAG,CACHd,KAAK,CACbG,MAAM,CAACoB,cAAc,CAACH,QAAQ,CAAC,CAC/B7E,QAAQ,CAACiF,MAAM,CAACnB,CAAC,CAAEF,MAAM,CAACkB,CAAC,CAAElB,MAAM,CAACmB,CAAC,CAAEnB,MAAM,CAAC3D,CAAC,CAAC,CAChDD,QAAQ,CAACkF,WAAW,CAAG,IAAI,CAC/B,CAEA3B,IAAI,CAAC4B,QAAQ,CAACL,CAAC,CAAGrB,KAAK,CAAG,KAAK,CAC/BF,IAAI,CAAC4B,QAAQ,CAACJ,CAAC,CAAGtB,KAAK,CAAG,KAAK,CAE/BF,IAAI,CAACG,QAAQ,CAAC0B,kBAAkB,CAAG,IAAI,CACvC7B,IAAI,CAACG,QAAQ,CAAC2B,iBAAiB,CAAG,IAAI,CACtC9B,IAAI,CAAC+B,iBAAiB,EAAE,CAC5B,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,GAAG,CAAEC,MAAM,CAAEC,MAAM,CAAK,CACzC,MAAO,CAACF,GAAG,CAAGC,MAAM,GAAKC,MAAM,CAAGD,MAAM,CAAC,CAC7C,CAAC,CAED,GAAM1C,SAAQ,CAAG,QAAXA,SAAQ,CAAIyC,GAAG,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAEC,MAAM,CAAK,CACtD,GAAIC,GAAE,CAAGN,WAAW,CAACC,GAAG,CAAEC,MAAM,CAAEC,MAAM,CAAC,CACzC,GAAII,MAAK,CAAGF,MAAM,CAAGD,MAAM,CAC3B,MAAOA,OAAM,CAAGE,EAAE,CAAGC,KAAK,CAC9B,CAAC,CAED,GAAMnD,IAAG,CAAG,QAANA,IAAG,CAAIoD,GAAG,CAAK,CACjB,GAAIC,MAAK,CAAGD,GAAG,CAACE,MAAM,CAAC,SAAUC,GAAG,CAAEC,CAAC,CAAE,CACrC,MAAOD,IAAG,CAAGC,CAAC,CAClB,CAAC,CAAC,CACF,MAAOH,MAAK,CAAGD,GAAG,CAACzD,MAAM,CAC7B,CAAC,CAED,GAAMG,IAAG,CAAG,QAANA,IAAG,CAAIsD,GAAG,CAAK,CACjB,MAAOA,IAAG,CAACE,MAAM,CAAC,SAAUG,CAAC,CAAED,CAAC,CAAE,CAC9B,MAAOnD,KAAI,CAACP,GAAG,CAAC2D,CAAC,CAAED,CAAC,CAAC,CACzB,CAAC,CAAC,CACN,CAAC,CAED,mBACI,aAAK,EAAE,CAAC,oBAAoB,wBACxB,UAAG,SAAS,CAAC,aAAa,CAAC,OAAO,CAAE,yBAAIhI,aAAY,CAAC,IAAI,CAAC,EAAC,UAAC,MAE5D,EAAI,cACJ,eAAQ,EAAE,CAAC,iBAAiB,EAAG,cAC/B,cACI,EAAE,CAAC,aAAa,CAChB,QAAQ,MACR,KAAK,CAAE,CACH6B,QAAQ,CAAE,UAAU,CACpBqG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,kBACf,CAAE,EACJ,GACA,CAEd,CAAC,CAED,cAAezI,gBAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}